package hitchbot.utils;

import java.util.List;

import hitchbot.main.Hitchbot;
import net.minecraft.client.Minecraft;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLiving;
import net.minecraft.init.Blocks;
import net.minecraft.util.AxisAlignedBB;
import net.minecraft.util.BlockPos;
import net.minecraft.util.MovingObjectPosition;
import net.minecraft.util.MovingObjectPosition.MovingObjectType;
import net.minecraft.util.Vec3;

public class rayTrace {
	public static boolean blocksInWay(double x1, double y1, double z1, double x2, double y2, double z2) {
		double xdif = x1-x2;
		double ydif = y1-y2;
		double zdif = z1-z2;
		double distpre = Math.sqrt(xdif*xdif+ydif*ydif);
		double dist = Math.sqrt(distpre*distpre+zdif*zdif); 
		//List<Entity> entities = Minecraft.getMinecraft().theWorld.getEntitiesWithinAABB(Entity.class, AxisAlignedBB.fromBounds(Minecraft.getMinecraft().thePlayer.posX - 50, Minecraft.getMinecraft().thePlayer.posY - 50, Minecraft.getMinecraft().thePlayer.posZ - 50, Minecraft.getMinecraft().thePlayer.posX + 50, Minecraft.getMinecraft().thePlayer.posY + 50, Minecraft.getMinecraft().thePlayer.posZ + 50));
		int counter = 0;
		xdif = xdif/distpre;
		zdif = zdif/distpre;
		
		MovingObjectPosition pos = Minecraft.getMinecraft().theWorld.rayTraceBlocks(new Vec3(x2+xdif, y2, z2+zdif), new Vec3(x1, y1, z1), false);
		if (pos != null && !(pos.typeOfHit == MovingObjectType.BLOCK) && !(pos.typeOfHit == MovingObjectType.MISS)) {
			return true;
		}else {return false;}
		/*while (counter<dist*10) {
			if (Minecraft.getMinecraft().theWorld.getBlockState(new BlockPos(x1+xdif*((double)counter)/10/dist, y1+ydif*((double)counter)/10/dist, z1+zdif*((double)counter)/10/dist)).getBlock() != Blocks.air) {
				return true;
			}
			counter++;
		}
		return false;
	*/
	}
}
